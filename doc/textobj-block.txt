*textobj-block.txt*                                    A text object for blocks

Version: 0.0.0-beta.1
Author: Keiran O'Leary <hello at keiranoleary.com>


==============================================================================
OVERVIEW                                                *textobj-block-overview*

I've been a massive fan of vim-textobj-indent for a long time.  This
additional textobj#user#plugin aspires for similar functionality but with the
ability to specify `up` or `down`.


==============================================================================
USAGE                                                      *textobj-block-usage*

The default mappings use `ib` and `ab` for to denoate "around block" and "inner
block". "Around block" will include the selection of blank lines (for
changing or deleting a block `cab` or `dab`)

The mappings also allow `iJ` and `iK` for specifying an upper or lower direction
within a block. (rather than only being able to work with the entire bloc).
You can also use `aJ` and `aK` to all the block matching to extend to include
further similarly intended block.

Perhaps the examples below are the best way to describe it.


==============================================================================
EXAMPLES                                                *textobj-block-examples*

In the below examples `>` denoates the line the cursor starts on, and `|` shows
which lines will be referenced (the textobj).

You could substitute `v` below for anyother vim command - such as `d`, `c`, `>` etc


*Inner-block* `(ib)`

`ib` select a block (with a matching closing indent, or contiguous indentation)

```
code
 >|code code
  |  code
  |code

   code
code
```

```
code
 >|code
  |code
  |code

   code
code
```


*Around-block* `(ab)`

`ab` the same as above but including blank lines (perfect for changing or
removing cleanly)

```
code
 >|code code
  |  code
  |code
  |
   code
code
```

```
code
   code

 >|code code
  |  code
  |code
  |
   code
code
```

==============================================================================
DIRECTIONAL                                          *textobj-block-directional*

For greater precision over _entire_ blocks you can specify just the upper or
lower portions.  when interacting with nested indentation I'm often in between
the open or close of a block - and just need a _direction_ for an indentation
reference to express my intent.

Using `i` (_inner_) or `a` _(around)_ allows you to specify just the block the
cursor is on - or to cascade through to blocks on the same indentation.


*Exclusive-down* `(iJ)`

`viJ` select down to the matching indentation

```
code
   code
 >|code code
  |  code
  |code

   code
code
```

*Inclusive-down* `(aJ)`

`vaJ` select down to the matching indentation (as well as subsequent matches)

```
code
   code
 >|code code
  |  code
  |code
  |
  |code
code
```

*Exclusive-up* `(iK)`

`viK` select up to the matching indentation

```
code
   code

  |code code
  |  code
 >|code
code
```

*Inclusive-up* `(aK)`

`vaK` select up to the matching indentation (as well as subsequent matches)

```
code
  |code
  |
  |code code
  |  code
 >|code
code
```

==============================================================================
WHY                                                          *textobj-block-why*

I find this behaves as a sensible "block" abstraction.  That when interacting
with nested indentation I'm often at the open or close of a block - and just
need a _direction_ for an indentation reference to express my intent.


==============================================================================
LICENSE                                                  *textobj-block-license*

MIT

==============================================================================
vim:tw=78:sw=2:ts=2:ft=help:norl:nowrap:
